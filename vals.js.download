function dateValidation(dte) {
var matchDash = dte.match(/^(\d{2})-\d{2}-\d{4}$/);
var matchSlash = dte.match(/^(\d{2})\/\d{2}\/\d{4}$/);
if (matchDash != null || matchSlash != null) {
   return 0;
   } else if (isNaN(dte)) {
     alert('Date must be in the following formats:' + '\r\n\r\n99-99-9999' + '\r\n\r\n99/99/9999' + '\r\n\r\n99999999');
	 return 1;
     } else if (dte.length != 8) {
     alert('Date must be in the following formats:' + '\r\n\r\n99-99-9999' + '\r\n\r\n99/99/9999' + '\r\n\r\n99999999');
       return 1;
       } 
}

function stopRKey(evt) {
  var evt = (evt) ? evt : ((event) ? event : null);
  var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
  if ((evt.keyCode == 13) && (node.type=="text"))  {return false;}
}

function yearValidation(yr) {
var matchYr = yr.match(/\d{4}/);
if (matchYr != null) {
   return 0;
   } else if (isNaN(yr)) {
     alert('Year must be in the following format:' + '\r\n\r\nYYYY');
	 return 1;
     } else if (yr.length != 4) {
     alert('Year must be in the following format:' + '\r\n\r\nYYYY');
       return 1;
       } 
}

function isAlpha(alphaString){
var matchAlpha = alphaString.match(/^[a-zA-Z]+$/);
if(matchAlpha != null) {
  return 0;
  }else{
      alert('Please enter text using only valid letters.');
      return 1;
  }
}

function timeCheck(sTime, eTime) {
if (sTime.length == 0 && eTime.length == 0) {
   return 0;
} else if ((sTime.length != 0 && eTime.length == 0) || (sTime.length == 0 && eTime.length != 0)) {
   alert ("You need both a starting and an ending time.");
   return 1;
} else {
  var today = new Date();
  var mins = sTime.substring(3, 5);
  var hrs = sTime.substring(0, 2);
  if (sTime.substring(6, 8) == "PM" && hrs != "12") {
     hrs = (parseInt(hrs, 10) + 12);
  }
  if (sTime.substring(6, 8) == "AM" && hrs == "12") {
     hrs = 0;
  }
  var startTime = new Date(today.getFullYear(), today.getMonth(), today.getDate(), hrs, mins, 0);
  mins = eTime.substring(3, 5);
  hrs = eTime.substring(0, 2);
  if (eTime.substring(6, 8) == "PM" && hrs != "12") {
     hrs = (parseInt(hrs, 10) + 12);
  }
  if (eTime.substring(6, 8) == "AM" && hrs == "12") {
     hrs = "00";
  }
  var endTime = new Date(today.getFullYear(), today.getMonth(), today.getDate(), hrs, mins, 0);
  //alert(today.getFullYear() + " " + hrs + " " + startTime + "\n" + endTime);
  if (endTime <= startTime) {
    alert ("Ending time must be greater than starting time.");
    return 1;
  } else { 
    return 0;
  }
}
}


function formatTime(o) {
    o.value=o.value.toUpperCase();
    if (o.value.length == 7 || o.value.length == 6) {
       if (o.value.substring(2, 3) != ":") {
          o.value = o.value.substring(0, 2) + ":" + o.value.substring(2, o.value.length + 1);
       }
       if (o.value.substring(o.value.length - 3, o.value.length - 2) != " ") {
          o.value = o.value.substring(0, o.value.length - 2) + " " + o.value.substring(o.value.length - 2, o.value.length + 1);
       }      
    }
}
function setCVals() {
   var pattern = /,/g;
   var pNum = /[0123456789]/g;
   var newString = document.dataForm.cPhoneField.value.match(pNum);
   if (newString) {
      var repString = newString.toString().replace(pattern, "");
      document.dataForm.areacodeField.value = repString.substring(0, 3);
      document.dataForm.extField.value = repString.substring(3, 6) + "-" + repString.substring(6, 11);
   }
}

function setEVals() {
   var pattern = /,/g;
   var pNum = /[0123456789]/g;
   var newString = document.dataForm.edPhoneField.value.match(pNum);
   if (newString) {
      var repString = newString.toString().replace(pattern, "");
      document.dataForm.ephoneField.value = repString.substring(0, 10);
   }
}

function timeValidation(vTime) {
if (vTime.length == 0) {
   return 0;
} else {
  var matchAMB = vTime.match(/^(\d{2}):\d{2} AM/);
  var matchPMB = vTime.match(/^(\d{2}):\d{2} PM/);
  var matchAM = vTime.match(/^(\d{2}):\d{2}AM/);
  var matchPM = vTime.match(/^(\d{2}):\d{2}PM/);  
  
  if (matchAM != null || matchPM != null || matchAMB != null || matchPMB != null) {
     if (parseInt(vTime.substring(3, 5), 10) > 59 || parseInt(vTime.substring(0, 2), 10) > 12) {
     alert ("Time must be in the 12 hour clock format \r\n\r\n12:00 AM to 12:59 PM");
     return 1;
     } else {
     return 0;
     }
  } else {
      alert ("Time must be in the format \r\n\r\n12:00 AM to 12:59 PM");
      return 1;
    }
  }
}


function upIt(o) {
    o.value=o.value.toUpperCase();
}

function ynVal(o) {
    if (o == "Y" || o == "N") {
		return 0;
	} else {
		alert ("Enter Y (Yes) or N (No)");
		return 1;
	}
}

function num(o) {
if(isNaN(o) || o.length != 3){
   alert('Area code must be 3 digits.');
   return 1;
  }
  else
  return 0;
}

function phoneValidation(phone) {
var matchDash = phone.match(/^(\d{3})-\d{3}-\d{4}$/);
var matchDot =  phone.match(/^(\d{3})\.\d{3}\.\d{4}$/);
var matchNum = phone.match(/^(\d{3})\d{3}\d{4}$/);
if (matchDash != null || matchDot != null || matchNum != null) {
   return 0;
   }  else {
       alert('Phone numbers must be in one of the following forms:' + '\r\n\r\n999-999-9999\r\n\r\n999.999.9999');
       return 1;
       } 
}

function shortPhoneValidation(phone) {
var matchDash = phone.match(/^(\d{3})-?\d{4}$/);
var numDashes = phone.split('-').length - 1;
if (matchDash != null) {
   return 0;
   } else if (isNaN(phone)) {
     alert('Campus phone must be 7 digits or in the following form:' + '\r\n\r\n999-9999');
	 return 1;
     } else if (phone.length != 7) {
     alert('Campus phone must be 7 digits or in the following form:' + '\r\n\r\n999-9999');
       return 1;
       } 
}

function submitEDF(st, en, theButton) {
    theButton.value="Please Wait...";
    theButton.disabled = true;
    theButton.className = "buttonPress";

        if  (document.dataForm.cPhoneField.value == "" || document.dataForm.cPhoneField.value == null || document.dataForm.cPhoneField.value < "!") {                                                            
                alert ("Campus phone may not be blank.");    
                document.dataForm.cPhoneField.focus();                                              
                document.dataForm.cPhoneField.select();
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;                                                   
        }          
        else
        if  (document.dataForm.selectCampus.value == "" || document.dataForm.selectCampus.value == null || document.dataForm.selectCampus.value < "!") {                                                            
                alert ("Campus may not be blank.");    
                document.dataForm.selectCampus.focus();  
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;                                                   
        }   
        else 
        if (phoneValidation(document.dataForm.cPhoneField.value) == 1 ) {
                document.dataForm.cPhoneField.focus();                              
                document.dataForm.cPhoneField.select();
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false; 				
		   }          
        else 
        /*
        if (document.dataForm.selectBldg.value == "" || document.dataForm.selectBldg.value == null || document.dataForm.selectBldg.value < "!") {                                                            
                alert ("Building may not be blank.");                 
                document.dataForm.selectBldg.focus();
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;                                                   
        } 
        else 
        if (document.dataForm.roomField.value == "" || document.dataForm.roomField.value == null || document.dataForm.roomField.value < "!") {                                                            
                alert ("Room number may not be blank.");                 
                document.dataForm.roomField.focus();                              
                document.dataForm.roomField.select();
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;                                                   
        } 
        else
        */
        if (document.dataForm.enameField.value == "" || document.dataForm.enameField.value == null || document.dataForm.enameField.value < "!") {                                                            
                alert ("Emergency contact name may not be blank.");                 
                document.dataForm.enameField.focus();                              
                document.dataForm.enameField.select();
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;                                                   
        } 
        else 
        if (document.dataForm.ephoneField.value == "" || document.dataForm.ephoneField.value == null || document.dataForm.ephoneField.value < "!") {                                                            
                alert ("Emergency contact phone number may not be blank.");                 
                document.dataForm.ephoneField.focus();                              
                document.dataForm.ephoneField.select();
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;                                                   
        }  else 
        if (document.dataForm.verifiedField.value > "" ) { 
           if (dateValidation(document.dataForm.verifiedField.value) == 1) {                                                            
                document.dataForm.verifiedField.focus();                              
                document.dataForm.verifiedField.select(); 
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;
                }                                              
                  
        else { 
              for (cnter = st; cnter <= en; cnter++) {
              if (timeValidation(document.forms[0].elements[cnter].value) == 1) {
              document.forms[0].elements[cnter].focus();
              document.forms[0].elements[cnter].select();
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
              }
              }
              for (cnter = st; cnter <= en - 2; cnter=cnter + 2) {
              if (timeCheck(document.forms[0].elements[cnter].value, document.forms[0].elements[cnter+ 1].value) == 1) {
              document.forms[0].elements[cnter].focus();
              document.forms[0].elements[cnter].select();
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
              }
              }              
              
              }
              return true;                                                    
        } else { 
              for (cnter = st; cnter <= en; cnter++) {
              if (timeValidation(document.forms[0].elements[cnter].value) == 1) {
              document.forms[0].elements[cnter].focus();
              document.forms[0].elements[cnter].select();
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
              } }              for (cnter = st; cnter <= en - 2; cnter=cnter + 2) {
              if (timeCheck(document.forms[0].elements[cnter].value, document.forms[0].elements[cnter+ 1].value) == 1) {
              document.forms[0].elements[cnter].focus();
              document.forms[0].elements[cnter].select();
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
              }
              }              
 } return true;

} 
function emailCheck (emailStr) {

/* The following variable tells the rest of the function whether or not
to verify that the address ends in a two-letter country or well-known
TLD.  1 means check it, 0 means don't. */
emailStr = emailStr.toLowerCase();
var checkTLD=1;

/* The following is the list of known TLDs that an e-mail address must end with. */

var knownDomsPat=/^(com|net|org|edu|int|mil|gov|arpa|biz|aero|name|coop|info|pro|museum)$/;

/* The following pattern is used to check if the entered e-mail address
fits the user@domain format.  It also is used to separate the username
from the domain. */

var emailPat=/^(.+)@(.+)$/;

/* The following string represents the pattern for matching all special
characters.  We don't want to allow special characters in the address. 
These characters include ( ) < > @ , ; : \ " . [ ] */

var specialChars="\\(\\)><@,;:\\\\\\\"\\.\\[\\]";

/* The following string represents the range of characters allowed in a 
username or domainname.  It really states which chars aren't allowed.*/

var validChars="\[^\\s" + specialChars + "\]";

/* The following pattern applies if the "user" is a quoted string (in
which case, there are no rules about which characters are allowed
and which aren't; anything goes).  E.g. "jiminy cricket"@disney.com
is a legal e-mail address. */

var quotedUser="(\"[^\"]*\")";

/* The following pattern applies for domains that are IP addresses,
rather than symbolic names.  E.g. joe@[123.124.233.4] is a legal
e-mail address. NOTE: The square brackets are required. */

var ipDomainPat=/^\[(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})\]$/;

/* The following string represents an atom (basically a series of non-special characters.) */

var atom=validChars + '+';

/* The following string represents one word in the typical username.
For example, in john.doe@somewhere.com, john and doe are words.
Basically, a word is either an atom or quoted string. */

var word="(" + atom + "|" + quotedUser + ")";

// The following pattern describes the structure of the user

var userPat=new RegExp("^" + word + "(\\." + word + ")*$");

/* The following pattern describes the structure of a normal symbolic
domain, as opposed to ipDomainPat, shown above. */

var domainPat=new RegExp("^" + atom + "(\\." + atom +")*$");

/* Finally, let's start trying to figure out if the supplied address is valid. */

/* Begin with the coarse pattern to simply break up user@domain into
different pieces that are easy to analyze. */

var matchArray=emailStr.match(emailPat);

if (matchArray==null) {

/* Too many/few @'s or something; basically, this address doesn't
even fit the general mould of a valid e-mail address. */

alert("Email address seems incorrect (check @ and .'s)");
return false;
}
var user=matchArray[1];
var domain=matchArray[2];

// Start by checking that only basic ASCII characters are in the strings (0-127).

for (i=0; i<user.length; i++) {
if (user.charCodeAt(i)>127) {
alert("Ths username contains invalid characters.");
return false;
   }
}
for (i=0; i<domain.length; i++) {
if (domain.charCodeAt(i)>127) {
alert("Ths domain name contains invalid characters.");
return false;
   }
}

// See if "user" is valid 

if (user.match(userPat)==null) {

// user is not valid

alert("The username doesn't seem to be valid.");
return false;
}

/* if the e-mail address is at an IP address (as opposed to a symbolic
host name) make sure the IP address is valid. */

var IPArray=domain.match(ipDomainPat);
if (IPArray!=null) {

// this is an IP address

for (var i=1;i<=4;i++) {
if (IPArray[i]>255) {
alert("Destination IP address is invalid!");
return false;
   }
}
return true;
}

// Domain is symbolic name.  Check if it's valid.
 
var atomPat=new RegExp("^" + atom + "$");
var domArr=domain.split(".");
var len=domArr.length;
for (i=0;i<len;i++) {
if (domArr[i].search(atomPat)==-1) {
alert("The domain name does not seem to be valid.");
return false;
   }
}

/* domain name seems valid, but now make sure that it ends in a
known top-level domain (like com, edu, gov) or a two-letter word,
representing country (uk, nl), and that there's a hostname preceding 
the domain or country. */

if (checkTLD && domArr[domArr.length-1].length!=2 && 
domArr[domArr.length-1].search(knownDomsPat)==-1) {
alert("The address must end in a well-known domain or two letter " + "country.");
return false;
}

// Make sure there's a host name preceding the domain.

if (len<2) {
alert("This address is missing a hostname!");
return false;
}

// If we've gotten this far, everything's valid!
return true;
}

function submitFeeForm() {
 if (document.feeForm.termField.value == "" || document.feeForm.termField.value == null || document.feeForm.termField.value < "!") {
                alert ("Term is required.");                                     
                document.feeForm.termField.focus();                                        
                document.feeForm.termField.select();  
                return false;                        
        }                           
        else if (!emailCheck(document.feeForm.emailField.value)) {                
                document.feeForm.emailField.focus();                                        
                document.feeForm.emailField.select();                                       
                return false; 				         
		}
        else if (dateValidation(document.feeForm.birthdayField.value)== 1) {                
                document.feeForm.birthdayField.focus();                                        
                document.feeForm.birthdayField.select();                                       
                return false; 				         
		}
        else    return true;                                        
}

function checkSubmitSLFields() {
  if (document.emailForm.initialField.value == "" || document.emailForm.initialField.value == null || document.emailForm.initialField.value < "!") {                                                            
                alert ("Initials are required.");              
                document.emailForm.initialField.focus();                                
                document.emailForm.initialField.select();    	
                return false;                                                   
        } else if (document.emailForm.selectMod.value == "" || document.emailForm.selectMod.value == null || document.emailForm.selectMod.value < "!") {                                                            
                alert ("Module is required.");              
                document.emailForm.selectMod.focus();                                
                return false;                                                   
        } else if (document.emailForm.mnemonicField.value == "" || document.emailForm.mnemonicField.value == null || document.emailForm.mnemonicField.value < "!") {                                                            
                alert ("Mnemonic is required.");              
                document.emailForm.mnemonicField.focus();                                
                document.emailForm.mnemonicField.select();    	
                return false;                                                   
        } else if (document.emailForm.descField.value == "" || document.emailForm.descField.value == null || document.emailForm.descField.value < "!") {                                                            
                alert ("Description is required.");              
                document.emailForm.descField.focus();                                
                document.emailForm.descField.select();    	
                return false;                                                   
        } else if (document.emailForm.fileField.value == "" || document.emailForm.fileField.value == null || document.emailForm.fileField.value < "!") {                                                            
                alert ("File is required is required.");              
                document.emailForm.fileField.focus();                                
                document.emailForm.fileField.select();    	
                return false;                                                   
        } else {
        return true;
        }
}

function setField() {
document.emailForm.fileNameField.value=document.emailForm.fileField.value;
}

function SSNValidation(ssn) {
var matchArr = ssn.match(/^(\d{3})-?\d{2}-?\d{4}$/);
var numDashes = ssn.split('-').length - 1;
if (matchArr == null || numDashes == 1) {
alert('Invalid SSN. Must be 9 digits or in the form NNN-NN-NNNN.');
return 1;
}
else 
if (parseInt(matchArr[1],10)==0) {
alert("Invalid SSN: SSN's can't start with 000.");
return 1;
}
else {
return 0;
   }
}

function isNumber(num)	{
		if (isNaN(num)) {
		   return 1;
		} else {
		   return 0;
		   }
}

function checkReqFields() {                                                           
        if (document.emailForm.selectCampus.value == "" || document.emailForm.selectCampus.value == null || document.emailForm.selectCampus.value < "!") {                                                            
                alert ("Campus is required.");     
                document.emailForm.selectCampus.focus();                            
                return false;                                                   
        } 
        else if  (document.emailForm.acctField.value == "" || document.emailForm.acctField.value == null || document.emailForm.acctField.value < "!") {                                                            
                alert ("Account Number is required.");              
                document.emailForm.acctField.focus();                                
                document.emailForm.acctField.select();    	
                return false;                                                   
        }  		                                                                      
        else if  (document.emailForm.phoneField.value == "" || document.emailForm.phoneField.value == null || document.emailForm.phoneField.value < "!") {                                                            
                alert ("Extension is required.");            
                document.emailForm.phoneField.focus();                                
                document.emailForm.phoneField.select();    	
                return false;                                                   
        }  
        else if  (document.emailForm.deptField.value == "" || document.emailForm.deptField.value == null || document.emailForm.deptField.value < "!") {                                                            
                alert ("Department is required.");              
                document.emailForm.deptField.focus();                                
                document.emailForm.deptField.select();    	
                return false;                                                   
        }                                                                       
        else if  (document.emailForm.emailField.value == "" || document.emailForm.emailField.value == null || document.emailForm.emailField.value < "!") {                                                            
                alert ("E-mail is required.");    
                document.emailForm.emailField.focus();                                
                document.emailForm.emailField.select();                 
                return false;                                                   
        }                                                                       
        else if (document.emailForm.descField.value == "" || document.emailForm.descField.value == null || document.emailForm.descField.value < "!") {                                                            
                alert ("Description is required.");                 
                document.emailForm.descField.focus();                              
                document.emailForm.descField.select(); 
                return false;                                                   
        } 
        else if (document.emailForm.noOfOrigField.value == "" || document.emailForm.noOfOrigField.value == null || document.emailForm.noOfOrigField.value < "!") {                                                            
                alert ("Number of originals is required.");                 
                document.emailForm.noOfOrigField.focus();                              
                document.emailForm.noOfOrigField.select(); 
                return false;                                                   
        } 
        else if (document.emailForm.selectSides1.value == "" || document.emailForm.selectSides1.value == null || document.emailForm.selectSides1.value < "!") {                                                            
                alert ("Sides is required.");                 
                document.emailForm.selectSides1.focus();                              
                return false;                                                   
        }   
        else if (document.emailForm.copiesField.value == "" || document.emailForm.copiesField == null || document.emailForm.copiesField.value < "!") {                                                            
                alert ("Number of copies is required.");                 
                document.emailForm.copiesField.focus();                              
                document.emailForm.copiesField.select(); 
                return false;                                                   
        } 
        else if (document.emailForm.selectSides2.value == "" || document.emailForm.selectSides2.value == null || document.emailForm.selectSides2.value < "!") {                                                            
                alert ("Sides is required.");                 
                document.emailForm.selectSides2.focus();                              
                return false;                                                   
        } 
        else if (document.emailForm.selectPaper.value == "" || document.emailForm.selectPaper.value == null || document.emailForm.selectPaper.value < "!") {                                                            
                alert ("Paper size is required.");                 
                document.emailForm.selectPaper.focus();                              
                return false;                                                   
        }
        else if (document.emailForm.fileField.value == "" || document.emailForm.fileField == null || document.emailForm.fileField.value < "!") {                                                            
                alert ("Attachment is required.");                 
                document.emailForm.fileField.focus();                              
                document.emailForm.fileField.select(); 
                return false;                                                   
        }  
		else if (isNumber(document.emailForm.phoneField.value) == 1 ) {
 		        alert ("Must be a valid number.");  
                document.emailForm.phoneField.focus();                              
                document.emailForm.phoneField.select(); 
				return false;
		}		               
		else if (isNumber(document.emailForm.noOfOrigField.value) == 1 ) {
 		        alert ("Must be a valid number.");  
                document.emailForm.noOfOrigField.focus();                              
                document.emailForm.noOfOrigField.select(); 
				return false;
		}		       
		else if (isNumber(document.emailForm.copiesField.value) == 1 ) {
 		        alert ("Must be a valid number.");  
                document.emailForm.copiesField.focus();                              
                document.emailForm.copiesField.select(); 
				return false;
		}	
		else if (!emailCheck(document.emailForm.emailField.value) ) {
                document.emailForm.emailField.focus();                              
                document.emailForm.emailField.select(); 
				return false;
		}			
        else { 
                return true;                                                    
        }                                                                       
} 
function submitTranscriptForm(theButton) {
    theButton.value="Please Wait...";
    theButton.disabled = true;
    theButton.className = "buttonPress";

   /* if (dateValidation(document.transcriptForm.bdateField.value)== 1) {                
                document.transcriptForm.bdateField.focus();                                        
                document.transcriptForm.bdateField.select();                                       
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false; 		
                
		}                        
        else if (!emailCheck(document.transcriptForm.emailField.value)) {                
                document.transcriptForm.emailField.focus();                                        
                document.transcriptForm.emailField.select();  
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false; 				         
		}

        else 
        */
         if (phoneValidation(document.transcriptForm.phoneField.value)== 1) {                
                document.transcriptForm.phoneField.focus();                                        
                document.transcriptForm.phoneField.select(); 
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false; 				         
		}
        else if  (document.transcriptForm.selectTranscript.value == "" || document.transcriptForm.selectTranscript.value == null || document.transcriptForm.selectTranscript.value < "!") {                                                            
                alert ("Transcript type may not be blank.");    
                document.transcriptForm.selectTranscript.focus();
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;                                                   
        }		
     /*  
      else if (ynVal(document.transcriptForm.currentField.value)== 1) {                
                document.transcriptForm.currentField.focus();                                        
                document.transcriptForm.currentField.select();
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false; 				         
		}
*/
        else if (ynVal(document.transcriptForm.holdField.value)== 1) {                
                document.transcriptForm.holdField.focus();                                        
                document.transcriptForm.holdField.select();
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false; 				         
		}
        else if (document.transcriptForm.recipientField.value == "" || document.transcriptForm.recipientField.value == null || document.transcriptForm.recipientField.value < "!") {
                alert ("Recipient is required.");                                     
                document.transcriptForm.recipientField.focus();                                        
                document.transcriptForm.recipientField.select();
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;                        
        }
        else if (document.transcriptForm.addr1Field.value == "" || document.transcriptForm.addr1Field.value == null || document.transcriptForm.addr1Field.value < "!") {
                alert ("Address is required.");                                     
                document.transcriptForm.addr1Field.focus();                                        
                document.transcriptForm.addr1Field.select();
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;                        
        } 
        else if (document.transcriptForm.cityField.value == "" || document.transcriptForm.cityField.value == null || document.transcriptForm.cityField.value < "!") {
                alert ("City is required.");                                     
                document.transcriptForm.cityField.focus();                                        
                document.transcriptForm.cityField.select(); 
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;                        
        }
        else if  (document.transcriptForm.selectState.value == "" || document.transcriptForm.selectState.value == null || document.transcriptForm.selectState.value < "!") {                                                            
                alert ("State is required.");    
                document.transcriptForm.selectState.focus();   
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;                                                   
        }         
        else if (document.transcriptForm.zipField.value == "" || document.transcriptForm.zipField.value == null || document.transcriptForm.zipField.value < "!") {
                alert ("Zip code is required.");                                     
                document.transcriptForm.zipField.focus();                                        
                document.transcriptForm.zipField.select(); 
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;                        
        }                                         						
        else  
        if (isNumber(document.transcriptForm.copiesField.value) == 1 || document.transcriptForm.copiesField.value == null || document.transcriptForm.copiesField.value == "" || document.transcriptForm.copiesField.value < "!") {
 		            alert ("Must be a valid number.");  
                document.transcriptForm.copiesField.focus();                              
                document.transcriptForm.copiesField.select();
                theButton.value="SUBMIT";
                theButton.className="INPUT";
                theButton.disabled=false;
                return false;		
		}
        else    return true;                                        
}

function selTSCFields() {                                                           
        if (document.rosterForm.selectTerm.value == "" || document.rosterForm.selectTerm.value == null || document.rosterForm.selectTerm.value < "!") {                                                            
                alert ("Term is required.");     
                document.rosterForm.selectTerm.focus();                            
                return false;                                                   
        } 
        else if ( (document.rosterForm.secSyn.value == "" || document.rosterForm.secSyn.value == null || document.rosterForm.secSyn.value < "!") 
                && (document.rosterForm.secName.value == "" || document.rosterForm.secName.value == null || document.rosterForm.secName.value < "!") )
        {                                                            
                alert ("Synonym or course name is required (No leading spaces).");              
                document.rosterForm.secSyn.focus();                                
                document.rosterForm.secSyn.select();    	
                return false;                                                   
        } else { 
        return true; 
        }  		
}        

function selCSFields() {                                                           
        if (document.schdForm.selectTerm.value == "" || document.schdForm.selectTerm.value == null || document.schdForm.selectTerm.value < "!") {                                                            
                alert ("Term is required.");     
                document.schdForm.selectTerm.focus();                            
                return false;                                                   
        } 
        else if ( (document.schdForm.facID.value == "" || document.schdForm.facID.value == null || document.schdForm.facID.value < "!") 
                && (document.schdForm.facSSN.value == "" || document.schdForm.facSSN.value == null || document.schdForm.facSSN.value < "!") )
        {                                                            
                alert ("Colleague ID or SSN is required (No leading spaces).");              
                document.schdForm.facID.focus();                                
                document.schdForm.facID.select();    	
                return false;                                                   
        } else if (document.schdForm.facSSN.value > "") {
                    if ( SSNValidation( document.schdForm.facSSN.value ) == 1 ) {
                return false;
                }
        } else { return true; }
}        
function selStuFields() {     
        if (document.schdForm.selectTerm.value == "" || document.schdForm.selectTerm.value == null || document.schdForm.selectTerm.value < "!") {                                                            
                alert ("Term is required.");     
                document.schdForm.selectTerm.focus();                            
                return false;                                                   
        } 
        else if ( (document.schdForm.stID.value == "" || document.schdForm.stID.value == null || document.schdForm.stID.value < "!") 
                && (document.schdForm.stSSN.value == "" || document.schdForm.stSSN.value == null || document.schdForm.stSSN.value < "!") )
        {                                                            
                alert ("Colleague ID or SSN is required (No leading spaces).");              
                document.schdForm.stID.focus();                                
                document.schdForm.stID.select();    	
                return false;                                                   
        } else if (document.schdForm.stSSN.value > "") {
                    if ( SSNValidation( document.schdForm.stSSN.value ) == 1 ) {
                return false;
                }
        } else { 
        return true; 
        }
}

function submitDisF(theButton) {
      theButton.value="Please Wait...";
      theButton.disabled = true;
      theButton.className = "buttonPress";
      

     if(valDiscipline(document.editForm.disciplineField.value) == 1){
              document.editForm.disciplineField.focus();
              document.editForm.disciplineField.select();
              document.editForm.disciplineField.value= document.editForm.disciplineField.value;
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
     else{return true;}
}

function addDisF(theButton) {
      theButton.value="Please Wait...";
      theButton.disabled = true;
      theButton.className = "buttonPress";
      

     if(valDiscipline(document.addForm.newDisciplineField.value) == 1){
              document.addForm.newDisciplineField.focus();
              document.addForm.newDisciplineField.select();
              document.addForm.newDisciplineField.value= document.addForm.newDisciplineField.value;
              theButton.value="ADD";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
     else{return true;}
}

function addTaxDate(theButton) {
      theButton.value="Please Wait...";
      theButton.disabled = true;
      theButton.className = "buttonPress";
      
    if(yearValidation(document.dateForm.TaxYear.value) == 1){
              document.dateForm.TaxYear.focus();
              document.dateForm.TaxYear.select();
              document.dateForm.TaxYear.value= document.dateForm.TaxYear.value;
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
     else if(dateValidation(document.dateForm.W2date.value) == 1){
              document.dateForm.W2date.focus();
              document.dateForm.W2date.select();
              document.dateForm.W2date.value= document.dateForm.W2date.value;
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
     
     
     else{return true;}
}

function addTuW2(theButton) {
      theButton.value="Please Wait...";
      theButton.disabled = true;
      theButton.className = "buttonPress";
      
    
     if(document.W2TUForm.CorrectedW2Id.value == "" || document.W2TUForm.CorrectedW2Id.value == null || document.W2TUForm.CorrectedW2Id.value < "!"){
              alert ("Colleague ID is required (No leading spaces).");  
              document.W2TUForm.CorrectedW2Id.focus();
              document.W2TUForm.CorrectedW2Id.select();
              document.W2TUForm.CorrectedW2Id.value= document.W2CorrectedForm.CorrectedW2Id.value;
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
     else if(yearValidation(document.W2TUForm.CorrectedTaxYear.value) == 1){
              document.W2TUForm.CorrectedTaxYear.focus();
              document.W2TUForm.CorrectedTaxYear.select();
              document.W2TUForm.CorrectedTaxYear.value = document.W2TUForm.CorrectedTaxYear.value;
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
     
     
     else{return true;}
}

function addCorrectedW2(theButton) {
      theButton.value="Please Wait...";
      theButton.disabled = true;
      theButton.className = "buttonPress";
      
    
     if(document.W2CorrectedForm.CorrectedW2Id.value == "" || document.W2CorrectedForm.CorrectedW2Id.value == null || document.W2CorrectedForm.CorrectedW2Id.value < "!"){
              alert ("Colleague ID is required (No leading spaces).");  
              document.W2CorrectedForm.CorrectedW2Id.focus();
              document.W2CorrectedForm.CorrectedW2Id.select();
              document.W2CorrectedForm.CorrectedW2Id.value= document.W2CorrectedForm.CorrectedW2Id.value;
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
     else if(yearValidation(document.W2CorrectedForm.CorrectedTaxYear.value) == 1){
              document.W2CorrectedForm.CorrectedTaxYear.focus();
              document.W2CorrectedForm.CorrectedTaxYear.select();
              document.W2CorrectedForm.CorrectedTaxYear.value = document.W2CorrectedForm.CorrectedTaxYear.value;
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
     
     
     else{return true;}
}
function viewEmpW2(theButton) {
      theButton.value="Please Wait...";
      theButton.disabled = true;
      theButton.className = "buttonPress";
      theButton.value="SUBMIT";
      theButton.className="INPUT";
      theButton.disabled=false;
    
     if(document.empW2Form.emp_id.value == "" || document.empW2Form.emp_id == null || document.empW2Form.emp_id.value < "!"){
              alert ("Colleague ID is required (No leading spaces).");  
              document.empW2Form.emp_id.focus();
              document.empW2Form.emp_id.select();
              document.empW2Form.emp_id.value= document.empW2Form.emp_id.value;
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
    // else{return true;}
     if (document.forms[0].elements[2].checked == false && document.forms[0].elements[3].checked == false) {
     alert ("You must either select View or Print");
     return false;
     }
     if (document.forms[0].elements[2].checked == true) {
       document.forms[0].elements[2].value = "Y_View";
        } else {
          document.forms[0].elements[2].value = "N_View";
          }
        if (document.forms[0].elements[3].checked == true) {
          document.forms[0].elements[3].value = "Y_Print";
        } else {
         document.forms[0].elements[3].value = "N_Print";
        }
        return true;
}

function editCorrectedW2(theButton) {
      theButton.value="Please Wait...";
      theButton.disabled = true;
      theButton.className = "buttonPress";
      
     if(yearValidation(document.w2corrEditForm.W2correctedYr.value) == 1){
              document.w2corrEditForm.W2correctedYr.focus();
              document.w2corrEditForm.W2correctedYr.select();
              document.w2corrEditForm.W2correctedYr.value = document.w2corrEditForm.W2correctedYr.value;
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
 
     else{return true;}
}

function editTuW2(theButton) {
      theButton.value="Please Wait...";
      theButton.disabled = true;
      theButton.className = "buttonPress";
      
     if(yearValidation(document.w2TuEditForm.W2correctedYr.value) == 1){
              document.w2TuEditForm.W2correctedYr.focus();
              document.w2TuEditForm.W2correctedYr.select();
              document.w2TuEditForm.W2correctedYr.value = document.w2TuEditForm.W2correctedYr.value;
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
 
     else{return true;}
}

function editTaxDate(theButton) {
      theButton.value="Please Wait...";
      theButton.disabled = true;
      theButton.className = "buttonPress";
      
    if(dateValidation(document.dateEditForm.W2dateEdit.value) == 1){
              document.dateEditForm.W2dateEdit.focus();
              document.dateEditForm.W2dateEdit.select();
              document.dateEditForm.W2dateEdit.value= document.dateEditForm.W2dateEdit.value;
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
     
     
     else{return true;}
}

function valDiscipline(dis) {
var matchArr = dis.match(/^([A-Za-z]{4})\s?-{1}\s?\w{1,}/);
if (matchArr == null) {
alert('Invalid Discipline. Must be in the form NNNN - Discipline Name');
return 1;
}
else {
return 0;
   }
}

function submitDocF(theButton) {
      theButton.value="Please Wait...";
      theButton.disabled = true;
      theButton.className = "buttonPress";
      

     if(valDocType(document.editForm.documentField.value) == 1){
              document.editForm.documentField.focus();
              document.editForm.documentField.select();
              document.editForm.documentField.value= document.editForm.documentField.value;
              theButton.value="SUBMIT";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
     else{return true;}
}

function addDocF(theButton) {
      theButton.value="Please Wait...";
      theButton.disabled = true;
      theButton.className = "buttonPress";
      

     if(valDocType(document.addDocTypeForm.newDocTypeField.value) == 1){
              document.addDocTypeForm.newDocTypeField.focus();
              document.addDocTypeForm.newDocTypeField.select();
              document.addDocTypeForm.newDocTypeField.value= document.addDocTypeForm.newDocTypeField.value;
              theButton.value="ADD";
              theButton.className="INPUT";
              theButton.disabled=false;
              return false;
     }
     else{return true;}
}

function valDocType(doc) {
var matchArr = doc.match(/\w{1,}/);
if (matchArr == null) {
alert('Please enter a valid document type.');
return 1;
}
else {
return 0;
   }
}

function docTypeDelConfirm(theButton) {
    theButton.value="Please Wait...";
    theButton.disabled = true;
    theButton.className = "buttonPress";
       	
    var id = document.deleteForm.documentField.value;
    var question = "Are you sure you want to delete\n" + id + "?";
    
    var del = confirm(question);
    
    if (del){
     return true;}
    else {
    
			    theButton.value="SUBMIT";
			    theButton.className="INPUT";
          theButton.disabled=false;    
			    return false;
   }
}

function pleaseConfirm(theButton) {
    theButton.value="Please Wait...";
    theButton.disabled = true;
    theButton.className = "buttonPress";
       	
    var id = document.deleteForm.disciplineField.value;
    var question = "Are you sure you want to delete\n" + id + "?";
    
    var del = confirm(question);
    
    if (del){
     return true;}
    else {
    
    
			    theButton.value="SUBMIT";
			    theButton.className="INPUT";
          theButton.disabled=false;
    
			    return false;
       	  	  }
}

function openWindow(gotoURL) {
winStats='location=1, scrollbars=1,resizable,width=720,height=520'
if (navigator.appName.indexOf("Microsoft")>=0) {
winStats+=',left=10,top=25'
}else{
winStats+=',screenX=10,screenY=25'
}
win=window.open(gotoURL,'Window',winStats);
win.focus();
}

function openNamedWindow(gotoURL, windowName) {
    winStats='location=1, scrollbars=1,resizable,width=720,height=520'
    if (navigator.appName.indexOf("Microsoft")>=0) {
        winStats+=',left=10,top=25'
    }else{
        winStats+=',screenX=10,screenY=25'
    }
    win=window.open(gotoURL,windowName,winStats);
    win.focus();
}

function openWin(gotoURL) {

winStats='toolbar=1, location=1, scrollbars=1,resizable,width=720,height=720'
if (navigator.appName.indexOf("Microsoft")>=0) {
winStats+=',left=10,top=25'
}else{
winStats+=',screenX=10,screenY=25'
}
win=window.open(gotoURL,'Window',winStats);
win.focus();
}

function NRdateValidation(dte) {
if (dte.length == 0) {
   return 0;
}

var matchDash = dte.match(/^(\d{2})-\d{2}-\d{4}$/);
var matchSlash = dte.match(/^(\d{2})\/\d{2}\/\d{4}$/);
if ((matchDash != null || matchSlash != null)) {
   var daysInMonth = DaysArray(12)
   if (dte.length == 8)  {
       var month=parseInt(dte.substring(0,2), 10);
       var day=  parseInt(dte.substring(2,4), 10);
       var year= parseInt(dte.substring(4,8), 10);   
   } else {
       var month=parseInt(dte.substring(0,2), 10);
       var day=  parseInt(dte.substring(3,5), 10);
       var year= parseInt(dte.substring(6,10), 10);
   }
   if(month<1 || month>12){
   alert('Please enter a valid month');
	 return 1;
   }
   if(day<1  || day>31 || (month==2 && day>daysInFebruary(year)) || day > daysInMonth[month] ){
   alert('Please enter a valid day');
	 return 1;
   }   else{
   return 0;}
   } else if (isNaN(dte)) {
     alert('Date must be in the following formats:' + '\r\n\r\n99-99-9999' + '\r\n\r\n99999999');
	 return 1;
     } else if (dte.length != 8) {
     alert('Date must be in the following formats:' + '\r\n\r\n99-99-9999' + '\r\n\r\n99999999');
       return 1;
       } else
       return 0;
}

function submitForm(vForm, beg, end, theButton) {
    theButton.value="Please Wait...";
    theButton.disabled = true;
    theButton.className = "buttonPress";
    for (cnter = beg; cnter <= end; cnter++) {
    //alert(cnter + " " + vForm.elements[cnter].name + vForm.elements[cnter].className);
        if (vForm.elements[cnter].type == "text"){
          vForm.elements[cnter].value = vForm.elements[cnter].value.trim();
        }       
       if (vForm.elements[cnter].className.indexOf("R")!=-1) {
          if (vForm.elements[cnter].value == null || vForm.elements[cnter].value < "!" || vForm.elements[cnter].value == "") {
       	  	    alert (vForm.elements[cnter].name + " is a required field. ");
			    //vForm.elements[cnter].select();    
			    theButton.value="SUBMIT";
			    theButton.className="INPUT";
			    theButton.disabled=false;
          if (vForm.elements[cnter].type != "hidden" && vForm.elements[cnter].editor == null) {
              vForm.elements[cnter].focus();
          }
			    return false;
       	  	} else {
            if (vForm.elements[cnter].type == "radio") {
                ret = -1;
                var rb = document.getElementsByName(vForm.elements[cnter].name);
                for (var i=0; i<rb.length; i++) { 
                   if (rb[i].checked) {
                   ret = i;
                   }
                }
                if (ret == -1) {
                   alert(vForm.elements[cnter].name + " is a required field.");
                   theButton.value="SUBMIT";
			             theButton.className="INPUT";
			             theButton.disabled=false;
                   if (vForm.elements[cnter].scrollWidth)
                      vForm.elements[cnter].focus();
                   return false;
                }
              } else {
            if (vForm.elements[cnter].type == "checkbox") {
                ret = -1;
                var cb = document.getElementsByName(vForm.elements[cnter].name);
                for (var i=0; i<cb.length; i++) { 
                   if (cb[i].checked) {
                   ret = i;
                   }
                }
                if (ret == -1) {
                   alert(vForm.elements[cnter].name + " is a required field.");
                   theButton.value="SUBMIT";
			             theButton.className="INPUT";
			             theButton.disabled=false;
                   vForm.elements[cnter].focus();
                   return false;
                }
              }
            }
          }
       	}
        
        if (vForm.elements[cnter].className.indexOf("A1")!= -1) {
          ret = -1;
          chkbox = -1;
          txt = -1;
          var rb = document.getElementsByName(vForm.elements[cnter].name);
          if(rb.length > 1){
          for (var i=0; i<rb.length; i++) { 
              
            if (rb[i].type != "checkbox" && rb[i].type != "hidden") {  
             
              if (rb[i].value != "" ) {
                ret = i;
                txt = 1;
              }
            }
            if (rb[i].type == "checkbox") {
                chkbox = 1;
                if (rb[i].checked) { 
                    ret = i;
                    
                }
            }
            
          }}else{
            rb = vForm;
            for (var i=0;i<rb.length;i++){
              if(rb.elements[i].className.indexOf("A1")!= -1){
             
                if(rb.elements[i].type != 'checkbox' && rb.elements[i].type != 'hidden'){
                  txt = 1;
                  if (rb.elements[i].value != "" ) {
                    ret = i;
                    
                  }
                }
                if(rb.elements[i].type == 'checkbox')
                {
                     chkbox = 1;
                     if (rb.elements[i].checked) { 
                      ret = i;
                     
                    }
                }
              }
          }
         }
         if (ret == -1) {
                   if (txt > -1){
                     msg = "At least one field must be entered.";
                   }
                   if (chkbox > -1){
                    msg = "At least one checkbox must be checked."
                   }
                   if(chkbox > -1 && txt > -1){
                    msg = "At least one checkbox or field must be entered";
                   }
                   alert(msg );
                   theButton.value="SUBMIT";
			             theButton.className="INPUT";
			             theButton.disabled=false;
                   vForm.elements[cnter].focus();
                   return false;
                }
          
       	}
            	
       if (vForm.elements[cnter].className.indexOf("D")!=-1) {
          if (vForm.elements[cnter].value != null ) { 
          	if (NRdateValidation(vForm.elements[cnter].value) == 1) {
       	  	    vForm.elements[cnter].focus();
			    //vForm.elements[cnter].select();    
			    theButton.value="SUBMIT";
			    theButton.className="INPUT";
			    theButton.disabled=false;
			    return false;
       	  	  }
       	   }  
       	}
       if (vForm.elements[cnter].className.indexOf("L")!=-1) {
          if (vForm.elements[cnter].value > " " ) { 
          	if (isAlpha(vForm.elements[cnter].value) == 1) {
       	  	    vForm.elements[cnter].focus();
			    //vForm.elements[cnter].select();    
			    theButton.value="SUBMIT";
			    theButton.className="INPUT";
			    theButton.disabled=false;
			    return false;
       	  	  }
       	   }  
       	}
       if (vForm.elements[cnter].className.indexOf("E")!=-1) {
          if (vForm.elements[cnter].value > " " ) { 
          	if (emailCheck(vForm.elements[cnter].value) == false) {
       	  	    vForm.elements[cnter].focus();
			    //vForm.elements[cnter].select();    
			    theButton.value="SUBMIT";
			    theButton.className="INPUT";
			    theButton.disabled=false;
			    return false;
       	  	  }
       	   }  
       	}
       if (vForm.elements[cnter].className.indexOf("P")!=-1) {
          if (vForm.elements[cnter].value > " " ) { 
          	if (phoneValidation(vForm.elements[cnter].value) == 1) {
       	  	    vForm.elements[cnter].focus();
			    //vForm.elements[cnter].select();    
			    theButton.value="SUBMIT";
			    theButton.className="INPUT";
			    theButton.disabled=false;
			    return false;
       	  	  }
       	   }  
       	}
       if (vForm.elements[cnter].className.indexOf("N")!=-1) {
          if (vForm.elements[cnter].value > " " ) { 
          if (isNumber(vForm.elements[cnter].value) == 1) {
             alert("Not a valid number");
       	     vForm.elements[cnter].focus();
			       //vForm.elements[cnter].select();    
			       theButton.value="SUBMIT";
			       theButton.className="INPUT";
			       theButton.disabled=false;
			       return false;
       	  	  }
       	   }  
       	}       	
       if (vForm.elements[cnter].className.indexOf("I")!=-1) {
          if (vForm.elements[cnter].value > " " ) { 
          if (!isInteger(vForm.elements[cnter].value)) {
             alert("Not a valid integer");
       	     vForm.elements[cnter].focus();
			       //vForm.elements[cnter].select();    
			       theButton.value="SUBMIT";
			       theButton.className="INPUT";
			       theButton.disabled=false;
			       return false;
       	  	  }
       	   }  
       	}      
	  } 
	  return true;
   }    
   
function submitSearchForm(theButton) {
    //alert("Testing ...");
    theButton.value="Please Wait...";
    theButton.disabled = true;
    theButton.className = "buttonPress";
    
    if (document.searchForm.crsField.value == "") {
      alert("You must enter a course name or short title in order to search.");
      theButton.value="SUBMIT";
      theButton.className="INPUT";
      theButton.disabled=false;
      document.searchForm.crsField.focus();
      return false;	
    } else {
      return true;
    }
}

function submitOtherinfoForm(theButton) {
    //alert("Testing ...");
    theButton.value="Please Wait...";
    theButton.disabled = true;
    theButton.className = "buttonPress";
    
    //var lec = document.crsResultsForm.hours_lec.value;
    //var lab = document.crsResultsForm.hours_lab.value;
    //var flag = document.crsResultsForm.waiver_flag.value;
          
    if (isNumber(document.crsResultsForm.hours_lec.value) == 1) {
      alert("Lecture hours must be a number.");
      document.crsResultsForm.hours_lec.focus();
      document.crsResultsForm.hours_lec.select();
      theButton.value="SUBMIT";
      theButton.className="INPUT";
      theButton.disabled = false;
      return false;      
    }
    else if (isNumber(document.crsResultsForm.hours_lab.value) == 1) {
      alert("Lab hours must be a number.");
      document.crsResultsForm.hours_lab.focus();
      document.crsResultsForm.hours_lab.select();
      theButton.value="SUBMIT";
      theButton.className="INPUT";
      theButton.disabled = false;
       return false;
    }
    else if (document.crsResultsForm.waiver_flag.value != "" && document.crsResultsForm.waiver_flag.value != null) {
      //alert("Found something in waiver_flag field...");
      if (document.crsResultsForm.waiver_flag.value == "Y" || document.crsResultsForm.waiver_flag.value == "y" ||
            document.crsResultsForm.waiver_flag.value == "N" || document.crsResultsForm.waiver_flag.value == "n") {
        return true;
      } else {
        alert("Waiver Flag must be Y or N");
        document.crsResultsForm.waiver_flag.focus();
        document.crsResultsForm.waiver_flag.select();
        theButton.value="SUBMIT";
        theButton.className="INPUT";
        theButton.disabled = false;
        return false;
      }
    }
    else
      return true;
}

function selFields() {    
      if ( (document.schdForm.stID.value == "" || document.schdForm.stID.value == null || document.schdForm.stID.value < "!") 
                && (document.schdForm.stSSN.value == "" || document.schdForm.stSSN.value == null || document.schdForm.stSSN.value < "!") )
        {                                                            
                alert ("Colleague ID or SSN is required (No leading spaces).");              
                document.schdForm.stID.focus();                                
                document.schdForm.stID.select();    	
                return false;                                                   
        } else if (document.schdForm.stSSN.value > "") {
                    if ( SSNValidation( document.schdForm.stSSN.value ) == 1 ) {
                return false;
                }
        } else { 
        return true; 
        }
}

function entryCheck(theButton) {
    //alert("Testing ...");
    theButton.value="Please Wait...";
    theButton.disabled = true;
    theButton.className = "buttonPress";
    
    if (document.sysSearch.mnemonic.value != "" && document.sysSearch.mnemonic.value != null) {
      return true;
    } else if (document.sysSearch.reportname.value != "" && document.sysSearch.reportname.value != null) {
      return true;
    } else if (document.sysSearch.application.value != "" && document.sysSearch.application.value != null) {
      return true;
    } else if (document.sysSearch.module.value != "" && document.sysSearch.module.value != null) {
      return true;
    } else if (document.sysSearch.description1.value != "" && document.sysSearch.description1.value != null) {
      return true;
    } else if (document.sysSearch.description2.value != "" && document.sysSearch.description2.value != null) {
      return true;
    } else if (document.sysSearch.description3.value != "" && document.sysSearch.description3.value != null) {
      return true;
    } else if (document.sysSearch.keyword1.value != "" && document.sysSearch.keyword1.value != null) {
      return true;
    } else if (document.sysSearch.keyword2.value != "" && document.sysSearch.keyword2.value != null) {
      return true;
    } else if (document.sysSearch.keyword3.value != "" && document.sysSearch.keyword3.value != null) {
      return true;
    } else if (document.sysSearch.runfrequency.value != "" && document.sysSearch.runfrequency.value != null) {
      return true;
    } else if (document.sysSearch.schedulename.value != "" && document.sysSearch.schedulename.value != null) {
      return true;
    } else if (document.sysSearch.schedulewhen.value != "" && document.sysSearch.schedulewhen.value != null) {
      return true;
    } else if (document.sysSearch.scheduledistributionlists.value != "" && document.sysSearch.scheduledistributionlists.value != null) {
      return true;
    } else {
      alert("You must enter at least one search criteria.");
      theButton.value="SUBMIT";
      theButton.className="INPUT";
      theButton.disabled = false;
      return false;
    }
}
function selCCRFields() {     
       document.cRosterForm.SUBMIT.value="Please Wait...";
       document.cRosterForm.SUBMIT.disabled = true;
       document.cRosterForm.SUBMIT.className = "buttonPress";  
        if ( document.cRosterForm.secSyn.value == "" || document.cRosterForm.secSyn.value == null || document.cRosterForm.secSyn.value < "!") {
                alert ("Synonym is required (No leading spaces).");              
                document.cRosterForm.secSyn.focus();                                
                document.cRosterForm.secSyn.select();
                document.cRosterForm.SUBMIT.value="SUBMIT";
                document.cRosterForm.SUBMIT.className="INPUT";
                document.cRosterForm.SUBMIT.disabled=false;
                return false;                                                   
        } else { 
        return true; 
        }  		
}        

String.prototype.trim = function() {
	return this.replace(/^\s+|\s+$/g,"");
}
String.prototype.ltrim = function() {
	return this.replace(/^\s+/,"");
}
String.prototype.rtrim = function() {
	return this.replace(/\s+$/,"");
}


function submitSS(val, theButton) {
   document.courseForm.submitType.value = val;
   document.courseForm.submit();
}

function limitlength(obj, length){
var maxlength=length
if (obj.value.length>maxlength)
obj.value=obj.value.substring(0, maxlength)
}

function RBDval (vForm, beg, end, theButton){
   cmmntCheckbox=document.forms[0].delCheckBox
   var c = "n";
   if (cmmntCheckbox.length >= 2){
   for(i=0; i < cmmntCheckbox.length; i++){
   if (cmmntCheckbox[i].checked){
        c = "y";       
     }
   }
   }
   else{
      if(document.getElementById("delCheckBox").checked){
        c = "y";
      }
   }
   if(c == "y"){
      var r=confirm("Warning: You are about to delete faculty\ncomments for the selected course(s).");
      if (r==true){
        if(submitForm(vForm, beg, end, theButton))
      {
        return true;
      }
        else return false;
      }
      else
      {
        return false;
      }
   }
   else if (c == "n")
    {
      if(submitForm(vForm, beg, end, theButton))
      {
        return true;
      }
      else return false;
    }   
}
function daysInFebruary (year){
	// February has 29 days in any year evenly divisible by four,
    // EXCEPT for centurial years which are not also divisible by 400.
    return (((year % 4 == 0) && ( (!(year % 100 == 0)) || (year % 400 == 0))) ? 29 : 28 );
}

function DaysArray(n) {
	for (var i = 1; i <= n; i++) {
		this[i] = 31
		if (i==4 || i==6 || i==9 || i==11) {
      this[i] = 30
    }
		if (i==2) {
      this[i] = 29
    }
   } 
   return this
}

function rmdups(theForm)
{
	var count = 0;
	var listvalues = new Array(theForm.super1.value, theForm.super2.value, theForm.super3.value, theForm.super4.value, theForm.super5.value );
	var hash = new Object();
	for (var i=0; i<listvalues.length; i++)
	{
		if (hash[listvalues[i].toLowerCase()] != 1 || listvalues[i] == "")
		{
			hash[listvalues[i].toLowerCase()] = 1;
		}
		else { count++; }
	}
  return count;
}

String.prototype.trim = function() {
	return this.replace(/^\s+|\s+$/g,"");
}
String.prototype.ltrim = function() {
	return this.replace(/^\s+/,"");
}
String.prototype.rtrim = function() {
	return this.replace(/\s+$/,"");
}

function isInteger(s) {
return (s.toString().search(/^-?[0-9]+$/) == 0);
}

